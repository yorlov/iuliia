plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'net.researchgate.release' version '2.8.1'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.8.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
}

group = 'it.orlov.iuliia'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
    withSourcesJar()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = [
                '-opt-in=kotlinx.serialization.ExperimentalSerializationApi'
        ]
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            pom {
                name = 'Iuliia'
                description = 'Transliterate Cyrillic â†’ Latin in every possible way'
                url = 'https://github.com/yorlov/iuliia'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yorlov'
                        name = 'Yuri Orlov'
                        email = 'yuri.n.orlov@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/yorlov/iuliia.git'
                    developerConnection = 'scm:git:https://github.com/yorlov/iuliia.git'
                    url = 'https://github.com/yorlov/iuliia'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "$ossrhUsername"
                password = "$ossrhPassword"
            }
        }
    }
}

signing {
    useInMemoryPgpKeys("$signingKey", "$signingPassword")
    sign publishing.publications.maven
}

release {
    failOnPublishNeeded = false
    preTagCommitMessage = '[gradle release plugin] prepare release'
    newVersionCommitMessage = '[gradle release plugin] [skip ci] prepare for next development iteration'
    buildTasks = []
}